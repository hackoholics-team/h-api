openapi: 3.0.3
info:
  version: "latest"
  title: API
  description: This API provides access to the Hackoholics service.
servers:
  - url: "http://localhost:8080"

paths:
  /ping:
    get:
      tags:
        - Health
      summary: Health check
      operationId: ping
      security: []
      description: Check server health
      responses:
        200:
          description: pong
          content:
            text/plain:
              schema:
                type: string
                example: pong
        500:
          $ref: "#/components/responses/500"

  /signin:
    post:
      tags:
        - Security
      summary: Login user.
      operationId: signIn
      security: []
      responses:
        "201":
          description: Logged in payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /signup:
    post:
      tags:
        - Security
      summary: Sign up user
      operationId: signUp
      security: []
      requestBody:
        description: Sign up payload.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Signed up user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /call/tokens:
    post:
      tags:
        - Security
      summary: Generate token for a video call
      operationId: generateToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appId:
                  type: integer
                appSecret:
                  type: string
                username:
                  type: string
      responses:
        "200":
          description: Generated token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiresIn:
                    type: integer
                    description: expiration date-time in seconds
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"


components:
  responses:
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestException"
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotAuthorizedException"
    404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceNotFoundException"
    429:
      description: Too many requests to the API
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TooManyRequestsException"
    500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerException"
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        lastName:
          type: string
        authenticationId:
          type: string
        firstName:
          type: string
        nic:
          type: string
        birthDate:
          type: string
          format: date-time
        email:
          type: string
        photoId:
          type: string
        sex:
          type: string
          enum:
            - MALE
            - FEMININE
        contact:
          type: string
        address:
          type: string
        country:
          type: string
        city:
          type: string
        role:
          type: string
          enum:
            - ADVISOR
            - DOCTOR
            - PATIENT

    Page:
      type: integer
      description: Start at `1`
    PageSize:
      type: integer
      description: Cannot exceed `500`
    Exception:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    BadRequestException:
      allOf:
        - $ref: "#/components/schemas/Exception"
    NotAuthorizedException:
      allOf:
        - $ref: "#/components/schemas/Exception"
    ResourceNotFoundException:
      allOf:
        - $ref: "#/components/schemas/Exception"
    TooManyRequestsException:
      allOf:
        - $ref: "#/components/schemas/Exception"
    InternalServerException:
      allOf:
        - $ref: "#/components/schemas/Exception"